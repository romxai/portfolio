/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { ThreeElements } from "@react-three/fiber";

type GLTFResult = GLTF & {
  nodes: {
    白云012: THREE.Mesh;
  };
  materials: {
    a: THREE.MeshPhysicalMaterial;
  };
};

export function Cloud1(props: ThreeElements["group"]) {
  const { nodes, materials } = useGLTF("/Cloud_1.glb") as unknown as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.白云012.geometry}
        material={materials.a}
        position={[0.09, 0.235, -0.204]}
        scale={1}
      />
    </group>
  );
}

useGLTF.preload("/Cloud_1.glb");
